# ===================================================================
# GEMS - MVP Blueprint v3
# ===================================================================
# Iteration: 3
# Focus: 核心導航、互動式儀表板升級與使用者體驗優化
# ===================================================================

projectInfo:
  projectName: "GEMS - 視覺化敏捷流程管理工具"
  executiveSummary: "一個基於 Google Apps Script 和 Google Sheets 的輕量級網頁應用，旨在將定義好的敏捷開發流程視覺化。它透過互動式流程圖來管理各階段產出的 YAML 文件，提供團隊一個清晰、集中且可追溯的專案儀表板。"
  sprintGoal: "新增跨專案導航的下拉式選單。同時，將目前的靜態流程圖重構為一個可互動、可摺疊的全景儀表板，並開發 YAML 內容摘要與『創意牆』筆記功能，全面提升核心導航與資訊獲取效率。"

technicalConsiderations:
  platforms: "網頁應用，主要透過桌面瀏覽器訪問。"
  technologyPreferences: "後端使用 Google Apps Script，資料庫使用 Google Sheets，前端使用 HTML Service 搭配 JavaScript/CSS。"
  integrationNeeds: "無新增外部 API 整合需求。"

constraintsAndRisks:
  constraints: "需在 Google Apps Script 的執行時間與效能限制下運作。"
  risks:
    - "風險一: 隨著專案與產物數量增長，Google Sheets 作為資料庫可能遇到讀寫效능瓶頸。"
    - "風險二: 外部 API (GitHub) 的穩定性與網路延遲，可能影響產物同步的成功率與使用者體驗。"
    - "風險三: 全景儀表板的互動邏輯較為複雜，可能增加前端 JavaScript 的開發與測試成本，並對 GAS 的渲染效能帶來挑戰。"

architecture:
  highLevelArchitecture:
    architecturalStyle: "採用 Google Apps Script 作為後端的 Serverless Web App 架構。"
    systemDiagram: |
      graph TD;
          A[使用者瀏覽器] --> B[HTML Service (UI)];
          B -- Client-side JS --> C{Google Apps Script (Server-side)};
          C -- SpreadsheetApp --> D[Google Sheets (Database)];
          C -- UrlFetchApp --> E[GitHub API];
          C -- PropertiesService --> F[Script Properties];
    frontendBackendIntegration: "前端透過 `google.script.run` 呼叫後端的 Apps Script 函式，進行資料的讀寫與外部服務的觸發。"
  techStack:
    - category: "Backend Runtime"
      technology: "Google Apps Script"
    - category: "Database"
      technology: "Google Sheets"
    - category: "Frontend"
      technology: "HTML Service (HTML/CSS/JS)"
    - category: "Diagram Rendering"
      technology: "Inline SVG (Componentized)"
    - category: "External Services"
      technology: "GitHub API"
  dataModels:
    - modelName: "Projects"
      description: "儲存專案的清單與基本資訊。"
      fields:
        project_id: "string (Primary Key)"
        project_name: "string"
    - modelName: "Artifacts"
      description: "儲存所有上傳的產物（YAML 文件）及其元數據。"
    - modelName: "Ideas"
      description: "儲存來自『創意牆』的文字筆記。"
      fields:
        idea_id: "string (Primary Key)"
        content: "string"
        created_at: "Timestamp"

requirements:
  inScope:
    - id: "FR10"
      description: "系統需將靜態流程圖重構為三個可獨立展開/摺疊的主要階段：『藍圖規劃』、『衝刺循環』、『迭代學習』。"
    - id: "FR11"
      description: "在每個階段內，主要的圖表節點應代表『角色 (Role)』。"
    - id: "FR12"
      description: "使用者點擊任一『角色』節點後，系統需能顯示或連結至該角色負責產出的『文件 (Document)』列表。"
    - id: "FR13"
      description: "系統後端需能解析上傳的 YAML 內容，並在前端針對特定文件類型顯示一個包含關鍵欄位的摘要區塊。"
    - id: "FR14"
      description: "畫面中需提供一個浮動按鈕，使用者點擊後可快速輸入文字筆記，並將其儲存至 Google Sheets 的新工作表中。"
    - id: "FR15"
      description: "UI 頂部需提供一個下拉式選單，用於顯示並切換不同的專案。"
  outOfScope:
    - "優化 GitHub API 的錯誤處理與前端回饋機制。"
    - "將 SVG 佈局優化（如節點尺寸、間距）進行標準化參數配置。"
    - "創意牆筆記的進階管理功能（如編輯、刪除、標籤分類）。"
  nonFunctional:
    - id: "NFR5"
      description: "全景儀表板的互動操作（展開/摺疊）應在 500 毫秒內完成視覺響應，確保流暢的使用者體驗。"
    - id: "NFR6"
      description: "後端的 YAML 解析不應阻塞主執行緒，確保在處理大型文件時 UI 依然保持響應。"

epicsAndStories:
  - epic: "Epic 5: 互動式全景儀表板升級"
    stories:
      - id: "5.1"
        story: "作為一個 Vibe CEO，我希望將流程圖重構成三個可摺疊的主要階段，以便我可以專注於當前的專案階段，而不會被整個複雜的流程分散注意力。"
        sourceLog: "Iteration 2 Closing Report (NIC-S2-005)"
        acceptanceCriteria:
          - id: "AC-5.1-1"
            description: "流程圖在初始載入時，應顯示為『藍圖規劃』、『衝刺循環』、『迭代學習』三個摺疊起來的階段標題。"
          - id: "AC-5.1-2"
            description: "點擊任一階段標題，可以平滑地展開該階段的詳細流程（角色節點），同時其他階段保持摺疊。"
          - id: "AC-5.1-3"
            description: "再次點擊已展開的階段標題，可以將其重新摺疊。"
      - id: "5.2"
        story: "作為一個團隊成員，我希望在點擊一個『角色』節點後，能看到他所負責產出的所有『文件』，以便我能快速地找到並查閱相關的專案產物。"
        sourceLog: "Iteration 2 Closing Report (NIC-S2-005)"
        acceptanceCriteria:
          - id: "AC-5.2-1"
            description: "點擊任一『角色』節點，會在其下方或旁邊彈出一個列表，清晰地展示該角色對應的『文件』名稱。"
          - id: "AC-5.2-2"
            description: "點擊文件列表中的某個項目，如果該文件已存在，則其內容會被載入到右側的內容顯示區。"
          - id: "AC-5.2-3"
            description: "如果文件不存在，點擊後應有明確的提示（例如按鈕變灰或顯示『尚未產出』的工具提示）。"

  - epic: "Epic 6: 使用者體驗與資訊可及性優化"
    stories:
      - id: "6.1"
        story: "作為一個 Vibe CEO，當我檢視一份『迭代學習報告』的 YAML 產物時，我希望能直接在頂部看到一個摘要，包含最終狀態和下次迭代候選項目數量，以便我能快速掌握最重要的結論。"
        sourceLog: "Iteration 2 Closing Report (NIC-S2-001)"
        acceptanceCriteria:
          - id: "AC-6.1-1"
            description: "當載入的 YAML 文件類型為 `Iteration_Closing_Report.yaml` 時，後端有一個函式能解析其內容。"
          - id: "AC-6.1-2"
            description: "在前端內容顯示區的頂部，會出現一個視覺上突出的摘要框。"
          - id: "AC-6.1-3"
            description: "摘要框中至少需包含 `finalStatus` 和 `nextIterationCandidates` 的總數量這兩個關鍵資訊。"
      - id: "6.2"
        story: "作為一個團隊成員，我希望在畫面上隨時有一個『創意牆』的入口，讓我可以隨時記錄下突發奇想或回饋，而不需要切換頁面或打斷當前思路。"
        sourceLog: "Iteration 2 Closing Report (NIC-S2-002)"
        acceptanceCriteria:
          - id: "AC-6.2-1"
            description: "畫面右下角始終顯示一個浮動的 icon 按鈕。"
          - id: "AC-6.2-2"
            description: "點擊該按鈕會彈出一個簡易的文字輸入框與『儲存』按鈕。"
          - id: "AC-6.2-3"
            description: "輸入文字並點擊儲存後，內容會被寫入到 Google Sheets 一個名為 `Ideas` 的新工作表中，前端同時給予操作成功的提示。"

  - epic: "Epic 7: 核心 UI 導航增強"
    stories:
      - id: "7.1"
        story: "作為一個使用者，我希望在 UI 頂部有一個下拉式選單，裡面列出所有專案的名稱，讓我可以直接選擇並切換到不同的專案儀表板。"
        sourceLog: "Vibe CEO's new directive during Iteration 3 planning"
        acceptanceCriteria:
          - id: "AC-7.1-1"
            description: "應用程式載入時，會從後端讀取 Google Sheets 中 `Projects` 工作表的所有專案清單。"
          - id: "AC-7.1-2"
            description: "UI 頂部的一個固定位置（如 Header 區域）會顯示一個下拉式選單元件，選單中顯示所有專案的名稱 (`project_name`)。"
          - id: "AC-7.1-3"
            description: "從下拉式選單中選擇一個不同的專案後，主畫面的儀表板內容（流程圖、產物列表等）會被刷新，以顯示所選專案的資料。"
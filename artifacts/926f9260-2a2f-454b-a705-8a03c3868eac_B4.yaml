projectId: "GEMS - 視覺化敏捷流程管理工具"
sprintId: 4
sprintGoal: "償還第三次迭代中發現的關鍵技術債。核心任務是建立一個全局的初始化框架以根除競態條件問題，並完成所有待定的自動化測試，以確保平台在擴展新功能前具備穩固的品質基礎。" #
version: "3.0"
status: "Approved"

# ===================================================================
# NEW SECTION: Foundational Architecture & Principles
# 目的：此區塊定義了本次衝刺所有開發任務必須遵守的核心架構原則與技術標準。
# 來源：mvp_blueprint_v3.yaml
# ===================================================================
foundationalArchitecture:
  highLevelArchitecture:
    architecturalStyle: "採用 Google Apps Script 作為後端的 Serverless Web App 架構，前端使用 HTML Service 進行渲染。" #
    architecturalPrinciples: #
      - principle: "Serverless 優先" #
        description: "最大化利用 Google 的無伺服器基礎設施 (Apps Script, Sheets)，以最小化維運成本。" #
      - principle: "數據與邏輯分離" #
        description: "後端 Apps Script (`.gs` 檔案) 專注於業務邏輯，數據完全儲存在 Google Sheets 中。" #
      - principle: "單一職責" #
        description: "每個後端函式應只做一件事，並做好。前端元件也應遵循此原則，以利於測試與維護。" #
    systemDiagram: | #
      graph TD;
          A[使用者瀏覽器] --> B[HTML Service (UI)];
          B -- Client-side JS --> C{Google Apps Script (Server-side)};
          C -- SpreadsheetApp --> D[Google Sheets (Database)];
          C -- UrlFetchApp --> E[GitHub API];
          C -- PropertiesService --> F[Script Properties];
    frontendBackendIntegration: #
      method: "`google.script.run`" #
      description: "前端 JavaScript 透過 `google.script.run` 非同步呼叫後端的 `.gs` 函式。所有數據都以 JSON 格式在兩端之間傳遞。此機制是系統的核心互動方式，也是本次迭代穩定性工作的焦點。" #

  techStack: #
    - category: "Backend Runtime" #
      technology: "Google Apps Script" #
      version: "V8 Runtime" #
    - category: "Database" #
      technology: "Google Sheets" #
    - category: "Frontend" #
      technology: "HTML Service (HTML/CSS/JS)" #
    - category: "Diagram Rendering" #
      technology: "Inline SVG (Componentized)" #
    - category: "External Services" #
      technology: "GitHub API" #
    - category: "Key Libraries" #
      technology: "js-yaml" #
    - category: "UI Frameworks" #
      technology: "Bootstrap (CSS/JS)" #
    - category: "Testing Frameworks" #
      technology: "QUnit for GAS (or similar)" #
      reason: "[本次迭代引入] 引入社群驗證的測試框架，以建立結構化、可重複執行的後端單元與整合測試。" #

  dataModels: #
    - sheetName: "Projects" #
      fields: #
        - { name: "project_id", type: "string (Primary Key)" }
        - { name: "project_name", type: "string" }
        - { name: "status", type: "string" }
        - { name: "created_at", type: "Timestamp" }
    - sheetName: "Artifacts" #
      fields: #
        - { name: "artifact_id", type: "string (Primary Key)" }
        - { name: "project_id", type: "string (Foreign Key)" }
        - { name: "node_id", type: "string" }
        - { name: "artifact_type", type: "string" }
        - { name: "related_artifact_id", type: "string" }
        - { name: "status", type: "string" }
        - { name: "version", type: "string" }
        - { name: "key_info_1", type: "string" }
        - { name: "key_info_2", type: "string" }
        - { name: "raw_content", type: "string (Full YAML text)" }
        - { name: "github_file_url", type: "string" }
        - { name: "github_commit_hash", type: "string" }
        - { name: "created_at", type: "Timestamp" }
    - sheetName: "Ideas" #
      fields: #
        - { name: "idea_id", type: "string (Primary Key)" }
        - { name: "project_id", type: "string (Foreign Key)" }
        - { name: "content", type: "string" }
        - { name: "created_at", type: "Timestamp" }
        - { name: "created_by", type: "string" }
        - { name: "status", type: "string" }
        - { name: "tags", type: "string (Comma-separated)" }

# ===================================================================
# Stories & Tasks for Sprint 4
# ===================================================================
stories:
  - storyId: "8.1"
    storyTitle: "作為一名開發者，我希望能建立一個全局的初始化框架，並將現有的 initializeApp 函式標準化，以便能從根本上解決 Google API 的競態條件問題，確保應用的穩定性。" #
    technicalBrief: "此故事為本次迭代的最高優先級任務(P0)。核心是建立一個集中的非同步初始化模組 (`initialization.js`)，並重構所有 `google.script.run` 呼叫點，以根除競態條件，達成 NFR7 的穩定性要求。" #
    technicalContext:
      riskLevel: "P0 (最高)" #
      relatedNFR:
        - id: "NFR7"
          description: "修復後，應用程式在各種網路條件下初始化失敗率應低於 1%。" #
      architecture:
        - component: "全局初始化框架 (Global Initialization Framework)" #
          strategy: "建立一個集中的非同步初始化模組 (`initialization.js`)，作為所有後端 API 呼叫的守門員。此模組將管理一個狀態標記 (e.g., `isReady`)，並提供一個 Promise-based 的方法 (`whenReady()`) 供其他模組調用，確保在 API 完全就緒前，所有請求都會被延遲執行。" #
          integrationMethod: "前端 JavaScript 透過 `google.script.run` 非同步呼叫後端的 `.gs` 函式。所有此類呼叫都必須被 `whenReady()` 方法包裹。" #
          performanceConsiderations: "此框架會導致首次 API 呼叫增加微小的延遲，但能根除因競態條件導致的隨機、長時間的失敗等待，整體使用者體驗將大幅提升。" #
          securityConsiderations: "無直接安全影響，但一個穩定的初始化流程是後續安全功能的基礎。" #
      relatedFunctions: #
        - "initializeApp()"
        - "All functions using google.script.run"
    acceptanceCriteria:
      - id: "AC-8.1-1"
        description: "建立一個新的 `initialization.js` 模組，負責管理所有 API 的載入與準備狀態。" #
      - id: "AC-8.1-2"
        description: "所有原先直接呼叫 `google.script.run` 的地方，都必須先通過此初始化模組的狀態檢查。" #
      - id: "AC-8.1-3"
        description: "經過壓力測試，在模擬慢速網路環境下，不會再出現 `google is not defined` 的錯誤。" #
    requiredTests:
      - type: "Unit Test"
        description: "驗證 `whenReady()` 函式的核心等待與解析 logique，確保在 API 未就緒時會等待，就緒後立即 resolve。" #
      - type: "Integration Test"
        description: "驗證 `google.script.run` 的呼叫是否能被 `whenReady()` 正確包裹並成功執行。" #
      - type: "E2E Test"
        description: "(對應 NFR7) 使用瀏覽器開發者工具模擬慢速網路 (Slow 3G)，驗證在長時間延遲後，頁面功能依然能正常初始化並運作。" #
    tasks:
      - taskId: "8.1-T1"
        type: "Backend"
        description: "開發：設計並實作 `initialization.js` 模組，包含狀態管理與 `whenReady()` Promise 函式。"
        fulfills: ["AC-8.1-1"]
      - taskId: "8.1-T2"
        type: "Backend"
        description: "重構：全面盤點並修改現有程式碼，將所有 `google.script.run` 的呼叫點都遷移至使用 `whenReady()` 進行前置檢查。"
        fulfills: ["AC-8.1-2"]
      - taskId: "8.1-T3"
        type: "QA"
        description: "測試：執行單元與整合測試，確保初始化框架的邏輯正確性與整合相容性。"
        fulfills: ["AC-8.1-1", "AC-8.1-2"]
      - taskId: "8.1-T4"
        type: "QA"
        description: "測試：執行端對端壓力測試，使用慢速網路模擬驗證競態條件問題已完全解決。"
        fulfills: ["AC-8.1-3"]

  - storyId: "8.2"
    storyTitle: "作為一名 QA 工程師，我希望能完成第三次迭代中所有待定的（PENDING）測試，並將其納入自動化測試流程，以便我們能對核心功能的穩定性有信心，並提升未來迴歸測試的效率。" #
    technicalBrief: "此故事的目標是建立自動化測試的安全網，引入 `QUnit for GAS` 等框架，為第三次迭代的核心後端函式建立結構化測試，達成 NFR8 的 90% 測試覆蓋率要求。" #
    technicalContext:
      riskLevel: "P1 (高)" #
      relatedNFR:
        - id: "NFR8"
          description: "核心功能（地圖載入、切換專案）的端對端測試覆蓋率應達到 90% 以上。" #
      architecture:
        - component: "自動化測試框架 (Automated Testing Framework)" #
          strategy: "引入社群成熟的 Google Apps Script 測試框架 (如 Gas-Simple-Scaffold 或 QUnit for GAS)，為第三次迭代交付的核心後端函式建立可重複執行的測試案例。測試將在一個專用的 Google Sheet 中運行，並輸出結構化的測試報告。" #
          performanceConsiderations: "測試執行會消耗 Apps Script 的每日配額，但僅在開發與部署階段執行，對線上使用者無影響。" #
          securityConsiderations: "測試案例不應包含任何生產環境的敏感金鑰或數據。所有測試都應在獨立的測試用 Google Sheet 上運行。" #
      relatedFunctions: #
        - "getFilesByRoleId"
        - "parseIterationReport"
        - "saveIdea"
        - "switchProject"
      affectedDataModels: #
        - "Projects"
        - "Artifacts"
        - "Ideas"
    acceptanceCriteria:
      - id: "AC-8.2-1"
        description: "針對第三次迭代交付的核心後端函式，都已有對應的自動化測試案例。" #
      - id: "AC-8.2-2"
        description: "自動化測試腳本可以被手動觸發，並在控制台或日誌中輸出清晰的測試報告。" #
    requiredTests:
      - type: "Unit Test"
        description: "涵蓋 `parseIterationReport` 函式的 YAML 解析 logique，驗證其是否能正確提取關鍵欄位。" #
      - type: "Integration Test"
        description: "涵蓋 `getFilesByRoleId` 函式的資料庫查詢邏輯，包含正常與空結果兩種情境。" #
      - type: "Integration Test"
        description: "涵蓋 `saveIdea` 函式的資料庫寫入邏輯，驗證資料的正確寫入與回傳。" #
      - type: "Integration Test"
        description: "涵蓋 `switchProject` 函式的資料庫互動正確性。" #
    tasks:
      - taskId: "8.2-T1"
        type: "Backend"
        description: "研究與準備：選擇並搭建 Google Apps Script 的自動化測試框架 (如 QUnit for GAS)，並建立專用的測試用 Google Sheet。"
        fulfills: ["AC-8.2-2"]
      - taskId: "8.2-T2"
        type: "Backend"
        description: "開發：為 `parseIterationReport` 和 `saveIdea` 函式撰寫單元/整合測試案例。"
        fulfills: ["AC-8.2-1"]
      - taskId: "8.2-T3"
        type: "Backend"
        description: "開發：為 `getFilesByRoleId` 和 `switchProject` 函式撰寫整合測試案例。"
        fulfills: ["AC-8.2-1"]
      - taskId: "8.2-T4"
        type: "QA"
        description: "測試：執行所有開發完成的自動化測試腳本，並產出第一份結構化的測試報告，確認腳本可被手動觸發且報告清晰。"
        fulfills: ["AC-8.2-2"]
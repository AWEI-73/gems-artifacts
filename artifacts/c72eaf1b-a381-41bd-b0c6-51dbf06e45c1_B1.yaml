# ===================================================================
# GEMS - MVP Blueprint v3
# ===================================================================
# Iteration: 4
# Focus: 平台穩定性與品質保證鞏固 (Platform Stability & QA Fortification)
# ===================================================================

projectInfo:
  projectName: "GEMS - 視覺化敏捷流程管理工具"
  executiveSummary: "一個基於 Google Apps Script 和 Google Sheets 的輕量級網頁應用，旨在將定義好的敏捷流程視覺化。它透過互動式流程圖來管理各階段產出的 YAML 文件，提供團隊一個清晰、集中且可追溯的專案儀表板。"
  sprintGoal: "償還第三次迭代中發現的關鍵技術債。核心任務是建立一個全局的初始化框架以根除競態條件問題，並完成所有待定的自動化測試，以確保平台在擴展新功能前具備穩固的品質基礎。"
  version: "v3"

# --- 商業分析 (Business Analysis - BA Scope) ---
businessAnalysis:
  targetAudience:
    - persona: "Vibe CEO / 產品負責人"
      needs: "需要一個穩定可靠的平台來規劃、追蹤和審視專案進度，不能因為底層技術問題而中斷工作流程。"
    - persona: "開發團隊"
      needs: "需要一個健壯的開發框架和可靠的自動化測試，以確保他們能專注於交付功能，而不是反覆修復基礎設施問題。"
  successMetrics:
    - id: "SM-4.1"
      metric: "初始化穩定性"
      target: "修復後，應用程式在各種網路條件下初始化失敗率應低於 1%。 (對應 NFR7)"
    - id: "SM-4.2"
      metric: "測試覆蓋率"
      target: "第三次迭代交付的核心功能的端對端測試覆蓋率應達到 90% 以上。 (對應 NFR8)"
  coreBusinessValue:
    - value: "提升產品可靠性"
      description: "從根本上解決已知的穩定性問題，為使用者提供一個更值得信賴的工具。"
    - value: "加速未來開發"
      description: "建立自動化測試的安全網，讓團隊未來可以更快、更自信地發布新功能，降低迴歸風險。"

# --- 系統架構 (System Architecture - SA Scope) ---
# [Vibe CEO 指示] 本次迭代的核心是系統結構，此處提供百分之百完整的資訊。
architecture:
  highLevelArchitecture:
    architecturalStyle: "採用 Google Apps Script 作為後端的 Serverless Web App 架構，前端使用 HTML Service 進行渲染。"
    architecturalPrinciples:
      - principle: "Serverless 優先"
        description: "最大化利用 Google 的無伺服器基礎設施 (Apps Script, Sheets)，以最小化維運成本。"
      - principle: "數據與邏輯分離"
        description: "後端 Apps Script (`.gs` 檔案) 專注於業務邏輯，數據完全儲存在 Google Sheets 中。"
      - principle: "單一職責"
        description: "每個後端函式應只做一件事，並做好。前端元件也應遵循此原則，以利於測試與維護。"
    systemDiagram: |
      graph TD;
          A[使用者瀏覽器] --> B[HTML Service (UI)];
          B -- Client-side JS --> C{Google Apps Script (Server-side)};
          C -- SpreadsheetApp --> D[Google Sheets (Database)];
          C -- UrlFetchApp --> E[GitHub API];
          C -- PropertiesService --> F[Script Properties];
    frontendBackendIntegration:
      method: "`google.script.run`"
      description: "前端 JavaScript 透過 `google.script.run` 非同步呼叫後端的 `.gs` 函式。所有數據都以 JSON 格式在兩端之間傳遞。此機制是系統的核心互動方式，也是本次迭代穩定性工作的焦點。"

  techStack:
    - category: "Backend Runtime"
      technology: "Google Apps Script"
      version: "V8 Runtime"
      reason: "核心後端運行環境，與 Google Workspace 無縫整合。"
    - category: "Database"
      technology: "Google Sheets"
      reason: "核心資料儲存方案，對小型專案而言易於管理和視覺化。"
    - category: "Frontend"
      technology: "HTML Service (HTML/CSS/JS)"
      reason: "Google Apps Script 原生的前端渲染技術。"
    - category: "Diagram Rendering"
      technology: "Inline SVG (Componentized)"
      reason: "輕量且可自定義的流程圖渲染方案，已在先前迭代中元件化。"
    - category: "External Services"
      technology: "GitHub API"
      reason: "用於版本控制與產物同步。"
    - category: "Key Libraries"
      technology: "js-yaml"
      reason: "用於在後端高效解析 YAML 文件內容，以支援摘要生成等功能。"
    - category: "UI Frameworks"
      technology: "Bootstrap (CSS/JS)"
      reason: "用於快速建構標準化的 UI 元件，如按鈕和下拉選單。"
    - category: "Testing Frameworks"
      technology: "QUnit for GAS (or similar)"
      reason: "[本次迭代引入] 引入社群驗證的測試框架，以建立結構化、可重複執行的後端單元與整合測試。"

  dataModels:
    - modelName: "Projects"
      description: "儲存專案的清單與基本資訊。支援跨專案導航功能。"
      fields:
        - name: "project_id"
          type: "string (Primary Key)"
        - name: "project_name"
          type: "string"
        - name: "status"
          type: "string"
        - name: "created_at"
          type: "Timestamp"
    - modelName: "Artifacts"
      description: "儲存所有上傳的產物（YAML 文件）及其元數據，支援版本控制與 GitHub 同步。"
      fields:
        - name: "artifact_id"
          type: "string (Primary Key)"
        - name: "project_id"
          type: "string (Foreign Key)"
        - name: "node_id"
          type: "string"
        - name: "artifact_type"
          type: "string"
        - name: "related_artifact_id"
          type: "string"
        - name: "status"
          type: "string"
        - name: "version"
          type: "string"
        - name: "key_info_1"
          type: "string"
        - name: "key_info_2"
          type: "string"
        - name: "raw_content"
          type: "string (Full YAML text)"
        - name: "github_file_url"
          type: "string"
        - name: "github_commit_hash"
          type: "string"
        - name: "created_at"
          type: "Timestamp"
    - modelName: "Ideas"
      description: "儲存來自『創意牆』的文字筆記，支援快速記錄與查詢。"
      fields:
        - name: "idea_id"
          type: "string (Primary Key)"
        - name: "project_id"
          type: "string (Foreign Key)"
        - name: "content"
          type: "string"
        - name: "created_at"
          type: "Timestamp"
        - name: "created_by"
          type: "string"
        - name: "status"
          type: "string"
        - name: "tags"
          type: "string (Comma-separated)"

  coreFunctionStrategy:
    - function: "全局初始化框架 (Global Initialization Framework)"
      strategy: "建立一個集中的非同步初始化模組 (`initialization.js`)，作為所有後端 API 呼叫的守門員。此模組將管理一個狀態標記 (e.g., `isReady`)，並提供一個 Promise-based 的方法 (`whenReady()`) 供其他模組調用，確保在 API 完全就緒前，所有請求都會被延遲執行。"
      performanceConsiderations: "此框架會導致首次 API 呼叫增加微小的延遲，但能根除因競態條件導致的隨機、長時間的失敗等待，整體使用者體驗將大幅提升。"
      securityConsiderations: "無直接安全影響，但一個穩定的初始化流程是後續安全功能（如動態載入權限）的基礎。"
      testingStrategy:
        riskLevel: "P0 (最高)"
        requiredTests:
          - type: "Unit Test"
            description: "驗證 `whenReady()` 在 API 未就緒時是否會正確等待，在 API 就緒後是否會立即 resolve。"
          - type: "Integration Test"
            description: "驗證 `google.script.run` 的呼叫是否能被 `whenReady()` 正確包裹並成功執行。"
          - type: "E2E Test"
            description: "使用瀏覽器開發者工具模擬慢速網路 (Slow 3G)，驗證在長時間延遲後，頁面功能依然能正常初始化並運作，且控制台無 `google is not defined` 錯誤。"

    - function: "自動化測試框架 (Automated Testing Framework)"
      strategy: "引入社群成熟的 Google Apps Script 測試框架 (如 Gas-Simple-Scaffold 或 QUnit for GAS)，為第三次迭代交付的核心後端函式建立可重複執行的測試案例。測試將在一個專用的 Google Sheet 中運行，並輸出結構化的測試報告。"
      performanceConsiderations: "測試執行會消耗 Apps Script 的每日配額，但僅在開發與部署階段執行，對線上使用者無影響。"
      securityConsiderations: "測試案例不應包含任何生產環境的敏感金鑰或數據。所有測試都應在獨立的測試用 Google Sheet 上運行。"
      testingStrategy:
        riskLevel: "P1 (高)"
        requiredTests:
          - type: "Unit Test"
            description: "為 `parseIterationReport` 的報告解析邏輯建立單元測試，驗證其是否能正確提取關鍵欄位。"
          - type: "Integration Test"
            description: "為 `getFilesByRoleId`, `saveIdea`, `switchProject` 等涉及 Google Sheets 讀寫的函式建立整合測試，驗證其資料庫互動的正確性。"

  deploymentAndOperations:
    deploymentProcess: "建議使用 `clasp` (Command Line Apps Script Projects) 進行本地開發與版本控制 (Git)。部署流程為：本地開發 -> Git Commit -> `clasp push` 推送至 Apps Script 平台。"
    loggingAndMonitoring: "所有後端的 `console.log` 輸出都會自動記錄在 Google Cloud Platform 的 Stackdriver Logging 中，作為錯誤排查與監控的主要手段。"

# --- 第四次迭代規劃 (PS Scope) ---
requirements:
  inScope:
    - id: "FR16"
      description: "系統必須建立一個可複用的初始化模組，確保所有客戶端 API 呼叫在 Google API 腳本完全載入後才執行。"
    - id: "FR17"
      description: "系統必須完成所有在第三次迭代中被標記為 PENDING 的效能、整合與端對端測試。"
    - id: "FR18"
      description: "系統應建立初步的自動化測試腳本，以覆蓋本次完成的測試案例。"
  outOfScope:
    - id: "OOS-004"
      description: "本次迭代不開發任何新的使用者可見功能（如創意牆進階管理）。"
  nonFunctional:
    - id: "NFR7"
      description: "修復後，應用程式在各種網路條件下初始化失敗率應低於 1%。"
    - id: "NFR8"
      description: "核心功能（地圖載入、切換專案）的端對端測試覆蓋率應達到 90% 以上。"

epicsAndStories:
  - epic: "Epic 8: 平台穩定性與品質保證鞏固"
    description: "此史詩專注於償還關鍵技術債並鞏固產品質量。目標是建立一個更穩健的底層架構和更可靠的測試保障，為未來的快速功能迭代鋪平道路。"
    stories:
      - id: "8.1"
        story: "作為一名開發者，我希望能建立一個全局的初始化框架，並將現有的 `initializeApp` 函式標準化，以便能從根本上解決 Google API 的競態條件問題，確保應用的穩定性。"
        sourceLog: "Iteration 3 Closing Report (NIC-S3-001, NIC-S3-004)"
        acceptanceCriteria:
          - id: "AC-8.1-1"
            description: "建立一個新的 `initialization.js` 模組，負責管理所有 API 的載入與準備狀態。"
          - id: "AC-8.1-2"
            description: "所有原先直接呼叫 `google.script.run` 的地方，都必須先通過此初始化模組的狀態檢查。"
          - id: "AC-8.1-3"
            description: "經過壓力測試，在模擬慢速網路環境下，不會再出現 `google is not defined` 的錯誤。"
        requiredTests: # 轉譯自 coreFunctionStrategy
          - type: "Unit Test"
            description: "驗證 `whenReady()` 函式的核心等待與解析邏輯。"
          - type: "E2E Test"
            description: "模擬慢速網路，驗證頁面初始化流程的端對端穩定性。"
        relatedFunctions:
          - "initializeApp()"
          - "All functions using google.script.run"
        affectedDataModels:
          - "None"

      - id: "8.2"
        story: "作為一名 QA 工程師，我希望能完成第三次迭代中所有待定的（PENDING）測試，並將其納入自動化測試流程，以便我們能對核心功能的穩定性有信心，並提升未來迴歸測試的效率。"
        sourceLog: "Iteration 3 Closing Report (NIC-S3-009)"
        acceptanceCriteria:
          - id: "AC-8.2-1"
            description: "針對第三次迭代交付的核心後端函式，都已有對應的自動化測試案例。"
          - id: "AC-8.2-2"
            description: "自動化測試腳本可以被手動觸發，並在控制台或日誌中輸出清晰的測試報告。"
        requiredTests: # 轉譯自 coreFunctionStrategy
          - type: "Unit Test"
            description: "涵蓋 `parseIterationReport` 函式的 YAML 解析邏輯。"
          - type: "Integration Test"
            description: "涵蓋 `getFilesByRoleId` 函式的資料庫查詢邏輯。"
          - type: "Integration Test"
            description: "涵蓋 `saveIdea` 函式的資料庫寫入邏輯。"
        relatedFunctions:
          - "getFilesByRoleId"
          - "parseIterationReport"
          - "saveIdea"
          - "switchProject"
        affectedDataModels:
          - "Projects"
          - "Artifacts"
          - "Ideas"

